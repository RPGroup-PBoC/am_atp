// Upload image from stack to SLM before each frame in MDA.
//
// We have to use the core API to upload each frame individually,
// since there is no public sequencing API for SLM devices.
//
// Pariksheet Nanda <[hidden email]> July 2014
// Edited by Tyler Ross 10/15/2018
// License: Public Domain

import ij.io.Opener; // To load TIFF stack file from disk.
import ij.ImagePlus; // To hold the opened image.
import ij.ImageStack; // To access stack pixels.

// Load file from disk.
Opener opener = new Opener();
ImagePlus imp = opener.openImage("C:/Users/Aster/Documents/MergeMask10x_3pos.tif"); // "/path/to/stack.tif"

// Get stack info.
ImageStack stack = imp.getImageStack();
slices = stack.getSize();

// Get the installed name of the SLM.
mosaic = mmc.getSLMDevice();

// Boilerplate when using runnables.
acq.clearRunnables();

// Runnable to upload each image to the SLM.
runnable = new Runnable() {
      
      // constants
      int npos = 3;
      int framedelay = 10;
      int nframes = 11;

      // variables
      int framenumber = 1;
      int framecount = 0;
      int positioncount = 0;
      
		//Initialize state
      print("Script Loaded");
      
      public void run() {

         // Get the pixels of the stack slice.
         pixels = stack.getPixels(framenumber);
         // Upload the image to the SLM.
         mmc.setSLMImage(mosaic, pixels);
         // Activate the uploaded image on the SLM.
         mmc.displaySLMImage(mosaic);
         print("Activated slice " + framenumber);

         positioncount = positioncount + 1;

         if (positioncount%npos) == 0){
            framecount = framecount + 1;
            if (framecount%framedelay == 0){
				   framenumber = (framenumber + 1) % nframes
            }
         }
      }
   };

// Dimension order is frame, position, channel, slice.
acq.attachRunnable(-1, -1, 0, 0,runnable); 